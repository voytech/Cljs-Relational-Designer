(ns ui.views.canvas
  (:require [utils.dom.dnd-utils :as dnd]
            [utils.dom.dom-utils :as dom]
            [core.settings :as settings]
            [core.actions-impl :refer [change-page!] ]
            [ui.components.pagination :refer [pagination]]
            [ui.views.editing :refer [editing]]
            [core.canvas-interface :as canvas-sheet]))

(def current-page (cell= (inc (get-in canvas-sheet/project [:page-index]))))

(defn resolve-drop "Should resolve drop events for following scenarios:
                    1. The drag source is from the library component (image is dragged)
                    2. The drag source comes from desktop (Use FileApi to load image)"
   [event]
   (.preventDefault event)
   ((comp canvas-sheet/add-image dnd/dispatch-drop-event) event)
)

(dom/wait-on-element "canvas-wrapper"  (fn [] (canvas-sheet/initialize-workspace)
                                              (canvas-sheet/add-popup "editing" (editing))
                                         ))

(defelem workspace []
  (div :id "workspace-inner"
       (div :id "page-indicator"
            :class "text-center"
              (text "Page : ~{current-page}"))
       (div :id "canvas-wrapper"
            :class "workspace-div"
            :drop resolve-drop
            :dragover #(.preventDefault %))
       (div :id "pagination"
            :class "page-pagination text-center"
            (pagination :enabled (cell= (get-in settings/settings [:multi-page]))
                        :pages (cell= (get-in settings/settings [:pages :count]))
                        :change-page #(change-page! % )))
       (div :id "slideshow" )
       (div :id "popups-holder"
            :style "position:relative;"))
)
