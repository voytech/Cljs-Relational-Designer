(ns ui.views.text-popups
  (:require [core.canvas-interface :as canvas]
            [data.js-cell :as jscell]
            [utils.fonts :as fonts]
            [core.actions-impl :as a]
            [core.entities.entity :as e])
  (:require-macros [tailrecursion.javelin :refer [cell= dosync]]
                   [data.macros :refer [->js]]))

(defn- neg-prop [prop]
  (not (prop (jscell/data canvas/selection_))))

(defn- selection-get-property [property]
  (cell= (let [uid (:uid canvas/selection_)]
           (property (e/data (e/entity-by-id uid))))))

(defn- selection-set-property [property value]
  (a/change-property! (:uid @canvas/selection_) property value))

(defn- new-get-property [property]
  (cell= (let [uid (:uid canvas/new_)]
           (property (e/data (e/entity-by-id uid))))))

(defn- new-set-property [property value]
  (a/change-property! (:uid @canvas/new_) property value))


(defelem text-add-popup []
  (div :id "text-add-i"
       :class "container-fluid"
       (div :class "form-inline top-margin-05"
           (input
               :id "create-text"
               :class "form-control"
               :type "text"
               :input #(new-set-property :text @% ) ;; maybe canvas/created-entity
               :value  (new-get-property :text)
            ))))

(defelem text-edit-popup []
  (div :id "text-edit-i"
       :class "container-fluid"
       (div :class "top-margin-05 "
            (div :class "input-group row top-margin-05"
                 (label :for "create-text" :class "input-group-addon " "Text")
                 (input
                  :id "create-text"
                  :class "pull-right form-control"
                  :type "text"
                  :input #(selection-set-property :text  @% ) ;; maybe canvas/created-entity
                  :value  (selection-get-property :text)
                  ))
            (div :class "row top-margin-05"
                 (label :for "font-fam" :class "pull-left" "Font")
                 (select
                  :id "font-fam"
                  :class "pull-right"
                  :change #(selection-set-property :fontFamily  @% )
                  :value (selection-get-property :fontFamily)
                  (map  #(option :value %  %) (fonts/available-fonts))
                  ))
            (div :class "row top-margin-05"
                 (label :for "font-size" :class "pull-left" "Size" )
                 (select
                  :id "font-size"
                  :class "pull-right"
                  :change #(selection-set-property :fontSize @% )
                  :value (selection-get-property :fontSize)
                  (map  #(option :value %  %) (fonts/available-font-sizes))
                  ))
            (div :class "row top-margin-05"
                 (label :for "font-weight" :class "pull-left" "Weight")
                 (select
                  :id "font-weight"
                  :class "pull-right"
                  :change #(selection-set-property :fontWeight @% )
                  :value (selection-get-property :fontWeight)
                  (map  #(option :value %  %) (fonts/available-font-weights))
                  ))
                )
))
